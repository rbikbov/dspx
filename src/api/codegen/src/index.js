/**
 * DISPEX API Test - V3.0
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccountTypeDto from './model/AccountTypeDto';
import BindArrearDto from './model/BindArrearDto';
import BindClientDto from './model/BindClientDto';
import ClientDto from './model/ClientDto';
import FlatDto from './model/FlatDto';
import HousingStockDto from './model/HousingStockDto';
import ResultDto from './model/ResultDto';
import StreetDto from './model/StreetDto';
import StreetPrefixDto from './model/StreetPrefixDto';
import WebHouseDto from './model/WebHouseDto';
import WebHouseTypeDto from './model/WebHouseTypeDto';
import HousingStockApi from './api/HousingStockApi';
import RequestApi from './api/RequestApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var DispexApiTestV30 = require('index'); // See note below*.
* var xxxSvc = new DispexApiTestV30.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new DispexApiTestV30.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new DispexApiTestV30.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new DispexApiTestV30.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 3.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccountTypeDto model constructor.
     * @property {module:model/AccountTypeDto}
     */
    AccountTypeDto,

    /**
     * The BindArrearDto model constructor.
     * @property {module:model/BindArrearDto}
     */
    BindArrearDto,

    /**
     * The BindClientDto model constructor.
     * @property {module:model/BindClientDto}
     */
    BindClientDto,

    /**
     * The ClientDto model constructor.
     * @property {module:model/ClientDto}
     */
    ClientDto,

    /**
     * The FlatDto model constructor.
     * @property {module:model/FlatDto}
     */
    FlatDto,

    /**
     * The HousingStockDto model constructor.
     * @property {module:model/HousingStockDto}
     */
    HousingStockDto,

    /**
     * The ResultDto model constructor.
     * @property {module:model/ResultDto}
     */
    ResultDto,

    /**
     * The StreetDto model constructor.
     * @property {module:model/StreetDto}
     */
    StreetDto,

    /**
     * The StreetPrefixDto model constructor.
     * @property {module:model/StreetPrefixDto}
     */
    StreetPrefixDto,

    /**
     * The WebHouseDto model constructor.
     * @property {module:model/WebHouseDto}
     */
    WebHouseDto,

    /**
     * The WebHouseTypeDto model constructor.
     * @property {module:model/WebHouseTypeDto}
     */
    WebHouseTypeDto,

    /**
    * The HousingStockApi service constructor.
    * @property {module:api/HousingStockApi}
    */
    HousingStockApi,

    /**
    * The RequestApi service constructor.
    * @property {module:api/RequestApi}
    */
    RequestApi
};
